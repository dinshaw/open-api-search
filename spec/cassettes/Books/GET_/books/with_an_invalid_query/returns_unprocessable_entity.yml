---
http_interactions:
- request:
    method: get
    uri: http://openlibrary.org/search.json?author=&subject=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 500
      message: Internal Server Error
    headers:
      Server:
      - nginx/1.4.6 (Ubuntu)
      Date:
      - Tue, 04 Aug 2020 15:54:07 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Method:
      - GET, OPTIONS
      Access-Control-Max-Age:
      - '86400'
      X-Ol-Stats:
      - '"SR 1 0.939 TT 0 1.082"'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 04 Aug 2020 15:54:07 GMT
recorded_with: VCR 6.0.0
